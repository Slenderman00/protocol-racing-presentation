@misc{AccentureLetThere,
  title = {Accenture {\textbar} {{Let}} There Be Change},
  urldate = {2025-04-27},
  abstract = {Across industries and around the world, we're creating better experiences for people using emerging technologies and human ingenuity. Together, we can reinvent anything.},
  howpublished = {https://www.accenture.com/no-en},
  langid = {english},
  file = {/home/joar/Zotero/storage/PLZ3Y297/no-en.html}
}

@misc{ACMDigitalLibrary,
  title = {{{ACM Digital Library}}},
  journal = {ACM Digital Library},
  urldate = {2025-03-28},
  abstract = {ACM Digital Library Home page},
  howpublished = {https://dl.acm.org/},
  langid = {english},
  file = {/home/joar/Zotero/storage/KLGKH2AP/dl.acm.org.html}
}

@misc{AgileAlliance2015,
  title = {Agile {{Alliance}}},
  year = {2015},
  month = jun,
  urldate = {2025-03-28},
  abstract = {Agile Alliance is a global nonprofit membership organization dedicated to people and organizations that apply the values and principles of the Agile Manifesto.},
  howpublished = {https://www.agilealliance.org/},
  langid = {american},
  file = {/home/joar/Zotero/storage/XTYC3RKA/www.agilealliance.org.html}
}

@article{AgileSoftwareDevelopment2024,
  title = {Agile Software Development},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Agile software development is the mindset for developing software that derives from values agreed upon by The Agile Alliance, a group of 17 software practitioners in 2001. As documented in their Manifesto for Agile Software Development the practitioners value:  Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan The practitioners cite inspiration from new practices at the time including extreme programming, scrum, dynamic systems development method, adaptive software development and being sympathetic to the need for an alternative to documentation driven, heavyweight software development processes.  Many software development practices emerged from the agile mindset. These agile-based practices, sometimes called Agile (with a capital A) include requirements, discovery and solutions improvement through the collaborative effort of self-organizing and cross-functional teams with their customer(s)/end user(s). While there is much anecdotal evidence that the agile mindset and agile-based practices improve the software development process, the empirical evidence is limited and less than conclusive.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1222507673},
  file = {/home/joar/Zotero/storage/877IV4HP/Agile_software_development.html}
}

@article{AgileSoftwareDevelopment2025,
  title = {Agile Software Development},
  year = {2025},
  month = apr,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {Agile software development is an umbrella term for approaches to developing software that reflect the values and principles agreed upon by The Agile Alliance, a group of 17 software practitioners, in 2001. As documented in their Manifesto for Agile Software Development the practitioners value:  Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan The practitioners cite inspiration from new practices at the time including extreme programming, scrum, dynamic systems development method, adaptive software development and being sympathetic to the need for an alternative to documentation driven, heavyweight software development processes. Many software development practices emerged from the agile mindset. These agile-based practices, sometimes called Agile (with a capital A) include requirements, discovery and solutions improvement through the collaborative effort of self-organizing and cross-functional teams with their customer(s)/end user(s). While there is much anecdotal evidence that the agile mindset and agile-based practices improve the software development process, the empirical evidence is limited and less than conclusive.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1285458108},
  file = {/home/joar/Zotero/storage/GX2BUWPU/Agile_software_development.html}
}

@misc{agSEKSensorBridgeConnectingBridgeTwo,
  title = {{{SEK-SensorBridge-Connecting}} Bridge with Two Sensor Ports},
  author = {AG, Sensirion},
  journal = {Sensirion AG},
  urldate = {2025-01-14},
  abstract = {- Connect two sensors to one SEK-SensorBridge and evaluate simultaneously - 1.2 V to 5.5 V selectable supply - Power supply up to 250 mA at 5 V Includes: - 1x SEK-SensorBridge - 1x USB connector cable},
  howpublished = {https://sensirion.com/products/catalog/SEK-SensorBridge},
  langid = {english},
  file = {/home/joar/Zotero/storage/AEXP7E8T/SEK-SensorBridge.html}
}

@misc{aiMixtralExperts2023,
  title = {Mixtral of Experts},
  author = {AI, Mistral},
  year = {2023},
  month = dec,
  urldate = {2024-06-09},
  abstract = {A high quality Sparse Mixture-of-Experts.},
  chapter = {news},
  howpublished = {https://mistral.ai/news/mixtral-of-experts/},
  langid = {american},
  file = {/home/joar/Zotero/storage/Q4VABBLF/mixtral-of-experts.html}
}

@misc{ApacheJMeterApache,
  title = {Apache {{JMeter}} - {{Apache JMeter}}™},
  urldate = {2025-02-20},
  howpublished = {https://jmeter.apache.org/},
  file = {/home/joar/Zotero/storage/BVDKFH8B/jmeter.apache.org.html}
}

@article{Backlog2022,
  title = {Backlog},
  year = {2022},
  month = oct,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Backlog may refer to:},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1115858432},
  file = {/home/joar/Zotero/storage/W29F6VQE/Backlog.html}
}

@article{barthModernizedArchitecturePost2022,
  title = {A {{Modernized Architecture}} for the {{Post Mortem System}} at {{CERN}}},
  author = {Barth, Jonas and Bogyai, Filip and Garnier, Jean-Christophe and Majewski, Marcin and Martins Ribeiro, Tiago and Mnich, Aleksandra and Pocwierz, Maciej and Selvek, Robert and Simpson, Robert and Stanisz, Anita and Wollmann, Daniel and Zerlauth, Markus},
  year = {2022},
  pages = {4 pages, 0.219 MB},
  publisher = {JACoW Publishing, Geneva, Switzerland},
  issn = {2673-5490},
  doi = {10.18429/JACOW-IPAC2022-TUPOMS055},
  urldate = {2025-02-19},
  abstract = {The control system of the accelerators at CERN stores and analyzes more than 200 million dumps of high resolution data recordings every year in the Post Mortem (PM) system. A continuous increase in the complexity of the Large Hadron Collider's (LHC) systems and the desire to collect more accurate data requires continuous improvement of the PM system. Recently, the PM system has been modernized ahead of the third operational Run of the LHC. The upgraded system implements well known data engineering principles such as horizontal scaling, stateless services and readiness for extensions. This paper recalls the purpose of the PM service and its current use cases. It presents its modernized architecture, reviews the current performance and limitations of the system, and draws perspectives for the next steps in its evolution.},
  collaborator = {Zimmermann, Frank and Tanaka, Hitoshi and Sudmuang, Porntip and Klysubun, Prapong and Sunwong, Prapaiwan and Chanwattana, Thakonwat and {Petit-Jean-Genaz}, Christine and Schaa, Volker R.W.},
  copyright = {Creative Commons Attribution 4.0 International},
  isbn = {9783954502271},
  langid = {english},
  keywords = {Accelerator Physics,MC6: Beam Instrumentation Controls Feedback and Operational Aspects},
  file = {/home/joar/Zotero/storage/82YEY4KT/Barth et al. - 2022 - A Modernized Architecture for the Post Mortem Syst.pdf}
}

@misc{BasicsUnixPhilosophy,
  title = {Basics of the {{Unix Philosophy}}},
  urldate = {2025-01-14},
  howpublished = {http://www.catb.org/{\textasciitilde}esr/writings/taoup/html/ch01s06.html},
  file = {/home/joar/Zotero/storage/W5B9QEWR/ch01s06.html}
}

@techreport{bjorklundYANG11Data2016,
  type = {Request for {{Comments}}},
  title = {The {{YANG}} 1.1 {{Data Modeling Language}}},
  author = {Bj{\"o}rklund, Martin},
  year = {2016},
  month = aug,
  number = {RFC 7950},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC7950},
  urldate = {2025-01-12},
  abstract = {YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).},
  file = {/home/joar/Zotero/storage/ETXZSGR3/Björklund - 2016 - The YANG 1.1 Data Modeling Language.pdf}
}

@misc{brehmAGILETRANSFORMATIONCOMPLEX2025,
  title = {{{AGILE TRANSFORMATION}}? {{FOR COMPLEX SYSTEMS}}? ...{{NO WAY}}!},
  author = {Brehm, Jeff},
  year = {2025},
  month = oct,
  urldate = {2025-04-27}
}

@article{BurndownChart2024,
  title = {Burndown Chart},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {A burndown chart or burn down chart is a graphical representation of work left to do versus time. The outstanding work (or backlog) is often on the vertical axis, with time along the horizontal. A burn down chart is a run chart of remaining work. It is useful for predicting when all of the work will be completed. It is often used in agile software development methodologies such as Scrum. However, burn down charts can be applied to any project containing measurable progress over time. Remaining work can be represented in terms of either time or story points (a sort of arbitrary unit). Burn charts can be used to present the project's team velocity. Velocity is a measure that represents the productivity rate, within a predefined interval, for which deliverables are created, validated and approved.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1219224248},
  file = {/home/joar/Zotero/storage/XEJ9E9R2/Burndown_chart.html}
}

@article{canilhoAchievingMetricOriented2020,
  title = {Achieving Metric Oriented Load Balancing},
  author = {Canilho, Paulo and Reguero, Ignacio and Saiz, Pablo},
  editor = {Doglioni, C. and Kim, D. and Stewart, G.A. and Silvestris, L. and Jackson, P. and Kamleh, W.},
  year = {2020},
  journal = {EPJ Web of Conferences},
  volume = {245},
  pages = {07004},
  issn = {2100-014X},
  doi = {10.1051/epjconf/202024507004},
  urldate = {2025-02-19},
  abstract = {The Load Balance Service at CERN handles more than 500 aliases, distributed over more than 2000 nodes. After being in production for more than fifteen years, it has been going through a major redesign over the last two years. Last year, the server part was reimplemented in the Go Programming Language, taking advantage of its concurrency features to improve the scaling of the system. This year, the client side has been the main focus. This article describes the client side and its configuration, including the tools used at CERN. All the components used by the Load Balance Service are open source, and they can be deployed at other places.},
  copyright = {https://creativecommons.org/licenses/by/4.0/},
  langid = {english},
  file = {/home/joar/Zotero/storage/E8N4BYEA/Canilho et al. - 2020 - Achieving metric oriented load balancing.pdf}
}

@article{ChallengeResponseAuthentication2024,
  title = {Challenge--Response Authentication},
  year = {2024},
  month = dec,
  journal = {Wikipedia},
  urldate = {2025-05-13},
  abstract = {In computer security, challenge-response authentication is a family of protocols in which one party presents a question ("challenge") and another party must provide a valid answer ("response") to be authenticated. The simplest example of a challenge-response protocol is password authentication, where the challenge is asking for the password and the valid response is the correct password. An adversary who can eavesdrop on a password authentication can authenticate themselves by reusing the intercepted password. One solution is to issue multiple passwords, each of them marked with an identifier.  The verifier can then present an identifier, and the prover must respond with the correct password for that identifier. Assuming that the passwords are chosen independently, an adversary who intercepts one challenge-response message pair has no clues to help with a different challenge at a different time. For example, when other communications security methods are unavailable, the U.S. military uses the AKAC-1553 TRIAD numeral cipher to authenticate and encrypt some communications.  TRIAD includes a list of three-letter challenge codes, which the verifier is supposed to choose randomly from, and random three-letter responses to them. For added security, each set of codes is only valid for a particular time period which is ordinarily 24 hours. Another basic challenge-response technique works as follows. Bob is controlling access to some resource, and Alice is seeking entry. Bob issues the challenge "52w72y". Alice must respond with the one string of characters which "fits" the challenge Bob issued. The "fit" is determined by an algorithm defined in advance, and known by both Bob and Alice. The correct response might be as simple as "63x83z", with the algorithm changing each character of the challenge using a Caesar cipher. In reality, the algorithm would be much more complex. Bob issues a different challenge each time, and thus knowing a previous correct response (even if it is not obfuscated by the means of communication) does not allow an adversary to determine the current correct response.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1262701189},
  file = {/home/joar/Zotero/storage/DYP9BJGL/Challenge–response_authentication.html}
}

@article{CloudComputing2024,
  title = {Cloud Computing},
  year = {2024},
  month = dec,
  journal = {Wikipedia},
  urldate = {2024-12-11},
  abstract = {"Cloud computing is a paradigm for enabling network access to a scalable and elastic pool of shareable physical or virtual resources with self-service provisioning and administration on-demand," according to ISO.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1261296740},
  file = {/home/joar/Zotero/storage/92TY4P5U/Cloud_computing.html}
}

@article{ComponentbasedSoftwareEngineering2024,
  title = {Component-Based Software Engineering},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Component-based software engineering (CBSE), also called component-based development (CBD), is a style of software engineering that aims to construct a software system from components that are loosely-coupled and reusable. This emphasizes the separation of concerns among components. To find the right level of component granularity, software architects have to continuously iterate their component designs with developers. Architects need to take into account user requirements, responsibilities and architectural characteristics.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1226023661},
  file = {/home/joar/Zotero/storage/ABCQ8P7M/Component-based_software_engineering.html}
}

@misc{consortiumISCOpenSource2024,
  title = {{{ISC Open Source Software Licenses}}},
  author = {Consortium, Internet Systems},
  year = {2024},
  month = mar,
  urldate = {2025-05-13},
  abstract = {Most ISC software is open source.},
  howpublished = {https://www.isc.org/licenses/},
  langid = {american},
  file = {/home/joar/Zotero/storage/QI9CDNMY/licenses.html}
}

@article{ContinuousDelivery2025,
  title = {Continuous Delivery},
  year = {2025},
  month = jan,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {Continuous delivery (CD) is a software engineering approach in which teams produce software in short cycles, ensuring that the software can be reliably released at any time. It aims at building, testing, and releasing software with greater speed and frequency. The approach helps reduce the cost, time, and risk of delivering changes by allowing for more incremental updates to applications in production. A straightforward and repeatable deployment process is important for continuous delivery.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1272005660},
  file = {/home/joar/Zotero/storage/YW3N6D2M/Continuous_delivery.html}
}

@incollection{creswellResearchDesignQualitative,
  title = {Research {{Design}}: {{Qualitative}}, {{Quantitative}}, and {{Mixed Methods Approaches}}},
  booktitle = {Research {{Design}}: {{Qualitative}}, {{Quantitative}}, and {{Mixed Methods Approaches}}},
  author = {Creswell, John and Creswell, David},
  address = {Chapter One: The Selection of a Research Approach},
  urldate = {2025-02-20}
}

@misc{CVERecordCVE20246387,
  title = {{{CVE Record}}: {{CVE-2024-6387}}},
  urldate = {2025-05-13},
  howpublished = {https://www.cve.org/CVERecord?id=CVE-2024-6387},
  file = {/home/joar/Zotero/storage/B747A9SG/CVERecord.html}
}

@misc{DeloitteAuditConsulting,
  title = {Deloitte {\textbar} {{Audit}}, {{Consulting}}, {{Financial}}, {{Risk Management}}, {{Tax Services}}},
  urldate = {2025-04-27},
  abstract = {Industry insights and audit, consulting, financial advisory, risk management, and tax services from Deloitte's global network of member firms.},
  howpublished = {https://www.deloitte.com/global/en.html},
  langid = {english},
  file = {/home/joar/Zotero/storage/44AS9LZ9/en.html}
}

@article{DesignSprint2024,
  title = {Design Sprint},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-24},
  abstract = {A design sprint is a time-constrained, five-phase process that uses design thinking with the aim of reducing the risk when bringing a new product, service or a feature to the market. The process aims to help teams to clearly define goals, validate assumptions and decide on a product roadmap before starting development. It seeks to address strategic issues using interdisciplinary expertise, rapid prototyping, and usability testing. This design process is similar to Sprints in an Agile development cycle.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839169},
  file = {/home/joar/Zotero/storage/9SDCUX62/2024 - Design sprint.pdf;/home/joar/Zotero/storage/RM6KLG4S/Design_sprint.html}
}

@article{DesignSprint2024a,
  title = {Design Sprint},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {A design sprint is a time-constrained, five-phase process that uses design thinking with the aim of reducing the risk when bringing a new product, service or a feature to the market. The process aims to help teams to clearly define goals, validate assumptions and decide on a product roadmap before starting development. It seeks to address strategic issues using interdisciplinary expertise, rapid prototyping, and usability testing. This design process is similar to Sprints in an Agile development cycle.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839169},
  file = {/home/joar/Zotero/storage/YTGZJGSF/Design_sprint.html}
}

@misc{DockerAcceleratedContainer2022,
  title = {Docker: {{Accelerated Container Application Development}}},
  shorttitle = {Docker},
  year = {2022},
  month = may,
  urldate = {2024-12-11},
  abstract = {Docker is a platform designed to help developers build, share, and run container applications. We handle the tedious setup, so you can focus on the code.},
  howpublished = {https://www.docker.com/},
  langid = {american},
  file = {/home/joar/Zotero/storage/82IWC585/www.docker.com.html}
}

@techreport{DomainNamesImplementation1987,
  type = {Request for {{Comments}}},
  title = {Domain Names - Implementation and Specification},
  year = {1987},
  month = nov,
  number = {RFC 1035},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC1035},
  urldate = {2024-12-11},
  abstract = {This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System. It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.},
  file = {/home/joar/Zotero/storage/AWEJL66X/1987 - Domain names - implementation and specification.pdf}
}

@misc{DORAGetBetter,
  title = {{{DORA}} {\textbar} {{Get Better}} at {{Getting Better}}},
  urldate = {2025-04-27},
  abstract = {DORA is a long running research program that seeks to understand the capabilities that drive software delivery and operations performance. DORA helps teams apply those capabilities, leading to better organizational performance.},
  howpublished = {https://dora.dev},
  langid = {english},
  file = {/home/joar/Zotero/storage/VTLW4JQG/dora.dev.html}
}

@misc{ECMA262,
  title = {{{ECMA-262}}},
  journal = {Ecma International},
  urldate = {2024-06-02},
  abstract = {ECMAScript{\textregistered} 2023 language specification, 14th edition - ECMAScript is a programming language based on several technologies like JavaScript.},
  langid = {american},
  file = {/home/joar/Zotero/storage/JBNJSLQD/ecma-262.html}
}

@techreport{ennsNetworkConfigurationProtocol2011,
  type = {Request for {{Comments}}},
  title = {Network {{Configuration Protocol}} ({{NETCONF}})},
  author = {Enns, Rob and Bj{\"o}rklund, Martin and Bierman, Andy and Sch{\"o}nw{\"a}lder, J{\"u}rgen},
  year = {2011},
  month = jun,
  number = {RFC 6241},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC6241},
  urldate = {2025-01-12},
  abstract = {The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/VI5ABVJG/Enns et al. - 2011 - Network Configuration Protocol (NETCONF).pdf}
}

@misc{ExtensibleMarkupLanguage,
  title = {Extensible {{Markup Language}} ({{XML}})},
  urldate = {2025-05-07},
  howpublished = {https://www.w3.org/XML/},
  file = {/home/joar/Zotero/storage/8SRRZ3VV/XML.html}
}

@article{ExtremeProgramming2025,
  title = {Extreme Programming},
  year = {2025},
  month = apr,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {Extreme programming (XP) is a software development methodology intended to improve software quality and responsiveness to changing customer requirements. As a type of agile software development, it advocates frequent releases in short development cycles, intended to improve productivity and introduce checkpoints at which new customer requirements can be adopted. Other elements of extreme programming include programming in pairs or doing extensive code review, unit testing of all code, not programming features until they are actually needed, a flat management structure, code simplicity and clarity, expecting changes in the customer's requirements as time passes and the problem is better understood, and frequent communication with the customer and among programmers. The methodology takes its name from the idea that the beneficial elements of traditional software engineering practices are taken to "extreme" levels. As an example, code reviews are considered a beneficial practice; taken to the extreme, code can be reviewed continuously (i.e. the practice of pair programming).},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1285948593},
  file = {/home/joar/Zotero/storage/T63BV9X7/Extreme_programming.html}
}

@misc{Fail2banFail2ban2025,
  title = {Fail2ban/Fail2ban},
  year = {2025},
  month = may,
  urldate = {2025-05-13},
  abstract = {Daemon to ban hosts that cause multiple authentication errors},
  howpublished = {Fail2Ban},
  keywords = {anti-bot,attack-prevention,ban-hosts,ban-management,bsd,fail2ban,gplv2,hids,ids,intrusion-detection,intrusion-prevention,ips,linux,loganalyzer,macos,monitoring,python,security,security-tools}
}

@article{FieldprogrammableGateArray2025,
  title = {Field-Programmable Gate Array},
  year = {2025},
  month = jan,
  journal = {Wikipedia},
  urldate = {2025-01-14},
  abstract = {A field-programmable gate array (FPGA) is a type of configurable integrated circuit that can be repeatedly programmed after manufacturing. FPGAs are a subset of logic devices referred to as programmable logic devices (PLDs). They consist of an array of programmable logic blocks with a connecting grid, that can be configured "in the field" to interconnect with other logic blocks to perform various digital functions. FPGAs are often used in limited (low) quantity production of custom-made products, and in research and development, where the higher cost of individual FPGAs is not as important, and where creating and manufacturing a custom circuit wouldn't be feasible. Other applications for FPGAs include the telecommunications, automotive, aerospace, and industrial sectors, which benefit from their flexibility, high signal processing speed, and parallel processing abilities. A FPGA configuration is generally written using a hardware description language (HDL) e.g. VHDL, similar to the ones used for application-specific integrated circuits (ASICs). Circuit diagrams were formerly used to write the configuration. The logic blocks of an FPGA can be configured to perform complex combinational functions, or act as simple logic gates like AND and XOR. In most FPGAs, logic blocks also include memory elements, which may be simple flip-flops or more sophisticated blocks of memory. Many FPGAs can be reprogrammed to implement different logic functions, allowing flexible reconfigurable computing as performed in computer software. FPGAs also have a role in embedded system development due to their capability to start system software development simultaneously with hardware, enable system performance simulations at a very early phase of the development, and allow various system trials and design iterations before finalizing the system architecture. FPGAs are also commonly used during the development of ASICs to speed up the simulation process.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1266862002},
  file = {/home/joar/Zotero/storage/75G5VKHM/Field-programmable_gate_array.html}
}

@misc{FigmaCollaborativeInterface,
  title = {Figma: {{The Collaborative Interface Design Tool}}},
  shorttitle = {Figma},
  journal = {Figma},
  urldate = {2024-05-24},
  abstract = {Figma is the leading collaborative design tool for building meaningful products. Seamlessly design, prototype, develop, and collect feedback in a single platform.},
  howpublished = {https://www.figma.com/},
  langid = {american},
  file = {/home/joar/Zotero/storage/TYGSTSL3/www.figma.com.html}
}

@misc{foundationTeachLearnMake2025,
  title = {Teach, Learn, and Make with the {{Raspberry Pi Foundation}}},
  author = {Foundation, Raspberry Pi},
  year = {2025},
  month = jan,
  journal = {Raspberry Pi Foundation},
  urldate = {2025-01-12},
  abstract = {We are a charity with the mission to enable young people to realise their full potential through the power of computing and digital technologies.},
  howpublished = {https://www.raspberrypi.org/},
  langid = {english},
  file = {/home/joar/Zotero/storage/XIZQI6YE/www.raspberrypi.org.html}
}

@misc{Framework,
  title = {Framework},
  journal = {Scaled Agile Framework},
  urldate = {2025-04-27},
  abstract = {SAFe 6 is an update to the SAFe Framework to help organizations become Lean Enterprise and achieve Business Agility. Learn more and see FAQs about 6.},
  howpublished = {https://framework.scaledagile.com/},
  langid = {american},
  file = {/home/joar/Zotero/storage/MHSUDZAY/framework.scaledagile.com.html}
}

@techreport{fullerSupernettingAddressAssignment1992,
  title = {Supernetting: An {{Address Assignment}} and {{Aggregation Strategy}}},
  shorttitle = {Supernetting},
  author = {Fuller, V. and Li, T. and Yu, J. and Varadhan, K.},
  year = {1992},
  month = jun,
  number = {RFC1338},
  pages = {RFC1338},
  institution = {RFC Editor},
  doi = {10.17487/rfc1338},
  urldate = {2025-10-16},
  abstract = {This memo discusses strategies for address assignment of the existing IP address space with a view to conserve the address space and stem the explosive growth of routing tables in default-route-free routers run by transit routing domain providers.},
  langid = {english},
  file = {/home/joar/Zotero/storage/BFPKGZPC/Fuller et al. - 1992 - Supernetting an Address Assignment and Aggregatio.pdf}
}

@misc{Git,
  title = {Git},
  urldate = {2024-06-10},
  howpublished = {https://www.git-scm.com/},
  file = {/home/joar/Zotero/storage/NGMAMBXG/www.git-scm.com.html}
}

@misc{GoogleScholar,
  title = {Google {{Scholar}}},
  urldate = {2025-03-28},
  howpublished = {https://scholar.google.com/},
  file = {/home/joar/Zotero/storage/ZRJ975H7/scholar.google.com.html}
}

@misc{GrafanaOpenComposable,
  title = {Grafana: {{The}} Open and Composable Observability Platform},
  shorttitle = {Grafana},
  journal = {Grafana Labs},
  urldate = {2025-01-20},
  abstract = {Grafana is the open source analytics \& monitoring solution for every database.},
  howpublished = {https://grafana.com/},
  langid = {english},
  file = {/home/joar/Zotero/storage/8XFBBPH8/grafana.com.html}
}

@misc{GrafanaOpenComposablea,
  title = {Grafana: {{The}} Open and Composable Observability Platform},
  shorttitle = {Grafana},
  journal = {Grafana Labs},
  urldate = {2025-01-20},
  abstract = {Grafana is the open source analytics \& monitoring solution for every database.},
  howpublished = {https://grafana.com/},
  langid = {english},
  file = {/home/joar/Zotero/storage/SAYQVIBR/grafana.com.html}
}

@misc{heimonenPeakDNS2024,
  title = {{{PeakDNS}}},
  author = {Heimonen, Joar},
  year = {2024},
  month = dec,
  urldate = {2024-12-11},
  abstract = {A fork of GoodDNS developed to operate as a kubernetes gateway}
}

@misc{heimonenPreprintPEAKProxy2024,
  title = {Preprint {{PEAK Proxy Eliminating Architecture}} Using {{Kubernetes}}: {{Leveraging Proven Technologies}} to {{Create}} the {{Distributed System}} of the {{Future}}},
  author = {Heimonen, Joar},
  year = {2024},
  publisher = {joar.me/blog\#peak},
  urldate = {2025-02-18},
  abstract = {The current paradigm of cloud computing heavily relies on proxies, which introduce single points of failure in systems meant to be dis- tributed. We propose a radical simplification of the current archi- tecture by leveraging the abundance of IPv6 addresses and utilizing modern purpose-built DNS servers to create a distributed system that is both more reliable and scales drastically better than the current cloud computing paradigm. The proposed system utilizes cluster-level DNS servers that dynamically manage service discoverability using Prometheus for monitoring. Service-to-service communication is han- dled through JSON Web Tokens, creating an intercommunication sys- tem that scales 1:1 with the number of users. The system achieves robust fault tolerance through native DNS client failover capabili- ties, leveraging the universal support for multiple record resolution and automatic retry behavior present in all modern DNS implemen- tations. This eliminates the need for custom failover logic while pro- viding battle-tested reliability mechanisms that operate transparently to applications. This paper describes the implementation of Peak, a proof-of-concept implementation of the proposed architecture.},
  archiveprefix = {joar.me/blog\#peak}
}

@misc{heimonenSlenderman00AskSurf2024,
  title = {Slenderman00/{{Ask-Surf}}},
  author = {Heimonen, Joar},
  year = {2024},
  month = may,
  urldate = {2024-06-09},
  abstract = {Hello Github! I'm Surf,  a friendly trained dolphin assistant here to help you with your coding needs.  As an AI, I can understand and execute simple code snippets in multiple languages, including Python, JavaScript, and HTML.  If you ever need assistance with coding tasks or debugging issues, just send me a message.  Happy coding!},
  copyright = {MIT},
  keywords = {dolphin,mixtral-8x7b}
}

@misc{heimonenSlenderman00GoodDns2023,
  title = {Slenderman00/{{GoodDns}}},
  author = {Heimonen, Joar},
  year = {2023},
  month = dec,
  urldate = {2024-10-13}
}

@misc{heimonenSlenderman00Netconfaggregator2025,
  title = {Slenderman00/Netconfaggregator},
  author = {Heimonen, Joar},
  year = {2025},
  month = may,
  urldate = {2025-05-07}
}

@techreport{hindenInternetProtocolVersion1998,
  type = {Request for {{Comments}}},
  title = {Internet {{Protocol}}, {{Version}} 6 ({{IPv6}}) {{Specification}}},
  author = {Hinden, Bob and Deering, Steve E.},
  year = {1998},
  month = dec,
  number = {RFC 2460},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC2460},
  urldate = {2024-12-11},
  abstract = {This document specifies version 6 of the Internet Protocol (IPv6), also sometimes referred to as IP Next Generation or IPng. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/A85SBXP9/Hinden and Deering - 1998 - Internet Protocol, Version 6 (IPv6) Specification.pdf}
}

@techreport{hindenInternetProtocolVersion1998a,
  type = {Request for {{Comments}}},
  title = {Internet {{Protocol}}, {{Version}} 6 ({{IPv6}}) {{Specification}}},
  author = {Hinden, Bob and Deering, Steve E.},
  year = {1998},
  month = dec,
  number = {RFC 2460},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC2460},
  urldate = {2025-02-19},
  abstract = {This document specifies version 6 of the Internet Protocol (IPv6), also sometimes referred to as IP Next Generation or IPng. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/3TNRC282/Hinden and Deering - 1998 - Internet Protocol, Version 6 (IPv6) Specification.pdf}
}

@techreport{holdregeIPNetworkAddress1999,
  type = {Request for {{Comments}}},
  title = {{{IP Network Address Translator}} ({{NAT}}) {{Terminology}} and {{Considerations}}},
  author = {Holdrege, Matt and Srisuresh, Pyda},
  year = {1999},
  month = aug,
  number = {RFC 2663},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC2663},
  urldate = {2025-02-18},
  abstract = {This document attempts to describe the operation of NAT devices and the associated considerations in general, and to define the terminology used to identify various flavors of NAT. This memo provides information for the Internet community.},
  file = {/home/joar/Zotero/storage/MKTNNVJE/Holdrege and Srisuresh - 1999 - IP Network Address Translator (NAT) Terminology an.pdf}
}

@misc{HomeScrumorg,
  title = {Home {\textbar} {{Scrum}}.Org},
  urldate = {2025-03-28},
  abstract = {Welcome to the Home of Scrum!™},
  howpublished = {https://www.scrum.org/index},
  langid = {english},
  file = {/home/joar/Zotero/storage/KJFCPC7U/www.scrum.org.html}
}

@inproceedings{hongDNSbasedLoadBalancing2006,
  title = {{{DNS-based}} Load Balancing in Distributed {{Web-server}} Systems},
  booktitle = {The {{Fourth IEEE Workshop}} on {{Software Technologies}} for {{Future Embedded}} and {{Ubiquitous Systems}}, and the {{Second International Workshop}} on {{Collaborative Computing}}, {{Integration}}, and {{Assurance}} ({{SEUS-WCCIA}}'06)},
  author = {Hong, Y.S. and No, J.H. and Kim, S.Y.},
  year = {2006},
  month = apr,
  pages = {4 pp.-},
  doi = {10.1109/SEUS-WCCIA.2006.23},
  urldate = {2024-12-13},
  abstract = {A cluster Web-server system can be deployed to support high request rates to Web application server (WAS) in Internet-banking. The domain name system (DNS) servers dispatch the client requests among the Web-servers through the URL-name to IP-address mapping mechanism. In this paper, we propose a cluster Web-server system arranged in the multiple logical ring connections, in which the DNS is integrated with an adaptive load balancing algorithm and evaluate the performance of the proposed distributed Web-server system. We show the performance measurements for the proposed system},
  keywords = {Broadcasting,Clustering algorithms,Collaborative software,Conferences,Dispatching,Distributed Web-server system,DNS-based dispatcher.,Internet,Load balancing,Load management,Measurement,Scheduling,Web server,Web-server cluster},
  file = {/home/joar/Zotero/storage/PLNVCMVC/1611743.html}
}

@inproceedings{hongDNSbasedLoadBalancing2006a,
  title = {{{DNS-based}} Load Balancing in Distributed {{Web-server}} Systems},
  booktitle = {The {{Fourth IEEE Workshop}} on {{Software Technologies}} for {{Future Embedded}} and {{Ubiquitous Systems}}, and the {{Second International Workshop}} on {{Collaborative Computing}}, {{Integration}}, and {{Assurance}} ({{SEUS-WCCIA}}'06)},
  author = {Hong, Y.S. and No, J.H. and Kim, S.Y.},
  year = {2006},
  month = apr,
  pages = {4 pp.-},
  doi = {10.1109/SEUS-WCCIA.2006.23},
  urldate = {2024-12-13},
  abstract = {A cluster Web-server system can be deployed to support high request rates to Web application server (WAS) in Internet-banking. The domain name system (DNS) servers dispatch the client requests among the Web-servers through the URL-name to IP-address mapping mechanism. In this paper, we propose a cluster Web-server system arranged in the multiple logical ring connections, in which the DNS is integrated with an adaptive load balancing algorithm and evaluate the performance of the proposed distributed Web-server system. We show the performance measurements for the proposed system},
  keywords = {Broadcasting,Clustering algorithms,Collaborative software,Conferences,Dispatching,Distributed Web-server system,DNS-based dispatcher.,Internet,Load balancing,Load management,Measurement,Scheduling,Web server,Web-server cluster},
  file = {/home/joar/Zotero/storage/RP2MTJBH/1611743.html}
}

@misc{HttpsAssetsctfassetsnet030xzm76gl6f,
  title = {{{https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}}},
  urldate = {2025-02-18},
  howpublished = {https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}
}

@misc{HttpsAssetsctfassetsnet030xzm76gl6fa,
  title = {{{https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}}},
  urldate = {2025-02-18},
  howpublished = {https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}
}

@misc{HttpsAssetsctfassetsnet030xzm76gl6fb,
  title = {{{https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}}},
  urldate = {2025-02-18},
  howpublished = {https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}
}

@misc{HttpsAssetsctfassetsnet030xzm76gl6fc,
  title = {{{https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}}},
  urldate = {2025-02-18},
  howpublished = {https://assets.ctfassets.net/030xzm76gl6f/5WaJDQQadkb2buicvHWrLt/7b8431bdfc8f9fcf237b13cfb1818823/preprint-1.pdf}
}

@misc{HttpsWwwmethodparkcnFileadmin,
  title = {{{https://www.methodpark.cn/fileadmin/user\_upload/99\_downloads/Process\_Insights/2018/Slides/2018\_MP\_Process\_Insights\_Jeff\_Brehm\_Accenture.pdf}}},
  urldate = {2025-04-27},
  howpublished = {https://www.methodpark.cn/fileadmin/user\_upload/99\_downloads/Process\_Insights/2018/Slides/2018\_MP\_Process\_Insights\_Jeff\_Brehm\_Accenture.pdf}
}

@misc{HttpsWwwnxpcomDocs,
  title = {{{https://www.nxp.com/docs/en/user-guide/UM10204.pdf}}},
  urldate = {2025-01-14},
  howpublished = {https://www.nxp.com/docs/en/user-guide/UM10204.pdf}
}

@misc{HttpsWwwnxpcomDocsa,
  title = {{{https://www.nxp.com/docs/en/user-guide/UM10204.pdf}}},
  urldate = {2025-01-14},
  howpublished = {https://www.nxp.com/docs/en/user-guide/UM10204.pdf}
}

@article{I2CbusSpecificationUser2021,
  title = {{{I2C-bus}} Specification and User Manual},
  year = {2021},
  volume = {2021},
  langid = {english},
  file = {/home/joar/Zotero/storage/89U7IH8A/2021 - I2C-bus specification and user manual.pdf}
}

@misc{IEEEStandardsAssociation,
  title = {{{IEEE Standards Association}}},
  journal = {IEEE Standards Association},
  urldate = {2025-01-12},
  howpublished = {https://standards.ieee.org/ieee/802.3af/1090/},
  langid = {english},
  file = {/home/joar/Zotero/storage/X7ZSKWNC/1090.html}
}

@misc{IEEEStandardsAssociationa,
  title = {{{IEEE Standards Association}}},
  journal = {IEEE Standards Association},
  urldate = {2025-01-12},
  howpublished = {https://standards.ieee.org/ieee/802.3at/4553/},
  langid = {english},
  file = {/home/joar/Zotero/storage/2PDFEU4J/4553.html}
}

@misc{IEEEXplore,
  title = {{{IEEE Xplore}}},
  urldate = {2025-03-28},
  howpublished = {https://ieeexplore.ieee.org/Xplore/home.jsp},
  file = {/home/joar/Zotero/storage/746DDI6Q/home.html}
}

@techreport{InternetProtocol1981,
  type = {Request for {{Comments}}},
  title = {Internet {{Protocol}}},
  year = {1981},
  month = sep,
  number = {RFC 791},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC0791},
  urldate = {2025-02-18},
  file = {/home/joar/Zotero/storage/BMP42MIT/1981 - Internet Protocol.pdf}
}

@misc{IPv4AddressReport,
  title = {{{IPv4 Address Report}}},
  urldate = {2025-10-16},
  howpublished = {https://ipv4.potaroo.net/},
  file = {/home/joar/Zotero/storage/NIW2QZDX/ipv4.potaroo.net.html}
}

@misc{IPv6AddressAllocation,
  title = {{{IPv6 Address Allocation}} and {{Assignment Policy}}},
  journal = {RIPE Network Coordination Center},
  urldate = {2024-12-11},
  abstract = {ripe-738: IPv6 Address Allocation and Assignment Policy},
  howpublished = {https://www.ripe.net/publications/docs/ripe-738/},
  langid = {english},
  file = {/home/joar/Zotero/storage/LD5WV3A2/ripe-738.html}
}

@techreport{jonesJSONWebToken2015,
  type = {Request for {{Comments}}},
  title = {{{JSON Web Token}} ({{JWT}})},
  author = {Jones, Michael B. and Bradley, John and Sakimura, Nat},
  year = {2015},
  month = may,
  number = {RFC 7519},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC7519},
  urldate = {2024-10-14},
  abstract = {JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.},
  file = {/home/joar/Zotero/storage/AVECKBRY/Jones et al. - 2015 - JSON Web Token (JWT).pdf}
}

@techreport{jonesJSONWebToken2015a,
  type = {Request for {{Comments}}},
  title = {{{JSON Web Token}} ({{JWT}})},
  author = {Jones, Michael B. and Bradley, John and Sakimura, Nat},
  year = {2015},
  month = may,
  number = {RFC 7519},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC7519},
  urldate = {2024-10-25},
  abstract = {JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.}
}

@article{Kanban2025,
  title = {Kanban},
  year = {2025},
  month = apr,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {Kanban (Japanese: 看板 [kambaɴ] meaning signboard) is a scheduling system for lean manufacturing (also called just-in-time manufacturing, abbreviated JIT). Taiichi Ohno, an industrial engineer at Toyota, developed kanban to improve manufacturing efficiency. The system takes its name from the cards that track production within a factory. Kanban is also known as the Toyota nameplate system in the automotive industry. A goal of the kanban system is to limit the buildup of excess inventory at any point in production. Limits on the number of items waiting at supply points are established and then reduced as inefficiencies are identified and removed. Whenever a limit is exceeded, this points to an inefficiency that should be addressed. In kanban, problem areas are highlighted by measuring lead time and cycle time of the full process and process steps. One of the main benefits of kanban is to establish an upper limit to work in process (commonly referred as "WIP") inventory to avoid overcapacity. Other systems with similar effect exist, for example CONWIP. A systematic study of various configurations of kanban systems, such as generalized kanban or production authorization card (PAC) and extended kanban, of which CONWIP is an important special case, can be found in Tayur (1993), and more recently Liberopoulos and Dallery (2000), among other papers.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1285475692},
  file = {/home/joar/Zotero/storage/WYCJ2UWR/Kanban.html}
}

@article{KanbanDevelopment2025,
  title = {Kanban (Development)},
  year = {2025},
  month = mar,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {Kanban (Japanese: 看板, meaning signboard or billboard) is a  lean method to manage and improve work across human systems. This approach aims to manage work by balancing demands with available capacity, and by improving the handling of system-level bottlenecks.  Work items are visualized to give participants a view of progress and process, from start to finish---usually via a kanban board. Work is pulled as capacity permits, rather than work being pushed into the process when requested. In  knowledge work and in software development, the aim is to provide a visual process management system which aids decision-making about what, when, and how much to produce. The underlying kanban method originated in lean manufacturing, which was inspired by the Toyota Production System. It has its origin in the late 1940s when the Toyota automotive company implemented a production system called just-in-time, which had the objective of producing according to customer demand and identifying possible material shortages within the production line. But it was a team at Corbis that realized how this method devised by Toyota could become a process applicable to any type of organizational process. Kanban is commonly used in software development in combination with methods and frameworks such as Scrum.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1282305703},
  file = {/home/joar/Zotero/storage/ESADEZL3/Kanban_(development).html}
}

@misc{LibuvDocumentation,
  title = {Libuv Documentation},
  urldate = {2025-05-13},
  howpublished = {https://docs.libuv.org/en/v1.x/},
  file = {/home/joar/Zotero/storage/899LM9WJ/v1.x.html}
}

@misc{LightsideinstrumentsRednetconf,
  title = {@lightside-Instruments/Red-Netconf},
  urldate = {2025-04-21},
  abstract = {Netconf nodes},
  howpublished = {http://flows.nodered.org/node/@lightside-instruments/red-netconf},
  langid = {english},
  file = {/home/joar/Zotero/storage/DUVTTCHZ/red-netconf.html}
}

@misc{LightsideInstrumentsYANG,
  title = {Lightside {{Instruments AS}} -- {{YANG}} Model Network Managed Instruments},
  urldate = {2025-01-20},
  langid = {american},
  file = {/home/joar/Zotero/storage/IIVUNR6V/lightside-instruments.com.html}
}

@techreport{lonvickSecureShellSSH2006,
  type = {Request for {{Comments}}},
  title = {The {{Secure Shell}} ({{SSH}}) {{Transport Layer Protocol}}},
  author = {Lonvick, Chris M. and Ylonen, Tatu},
  year = {2006},
  month = jan,
  number = {RFC 4253},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC4253},
  urldate = {2025-05-14},
  abstract = {The Secure Shell (SSH) is a protocol for secure remote login and other secure network services over an insecure network. This document describes the SSH transport layer protocol, which typically runs on top of TCP/IP. The protocol can be used as a basis for a number of secure network services. It provides strong encryption, server authentication, and integrity protection. It may also provide compression. Key exchange method, public key algorithm, symmetric encryption algorithm, message authentication algorithm, and hash algorithm are all negotiated. This document also describes the Diffie-Hellman key exchange method and the minimal set of algorithms that are needed to implement the SSH transport layer protocol. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/IPD6AA4F/Lonvick and Ylonen - 2006 - The Secure Shell (SSH) Transport Layer Protocol.pdf}
}

@misc{LowcodeProgrammingEventdriven,
  title = {Low-Code Programming for Event-Driven Applications : {{Node-RED}}},
  urldate = {2025-03-29},
  howpublished = {https://nodered.org/},
  file = {/home/joar/Zotero/storage/CH9HWX7B/nodered.org.html}
}

@misc{ManifestoAgileSoftware,
  title = {Manifesto for {{Agile Software Development}}},
  urldate = {2024-06-02},
  howpublished = {http://agilemanifesto.org/},
  file = {/home/joar/Zotero/storage/Z78NIIEU/agilemanifesto.org.html}
}

@misc{ManifestoAgileSoftwarea,
  title = {Manifesto for {{Agile Software Development}}},
  urldate = {2025-04-27},
  howpublished = {https://agilemanifesto.org/},
  file = {/home/joar/Zotero/storage/K2NPU4GT/agilemanifesto.org.html}
}

@misc{MermaidDiagrammingCharting,
  title = {Mermaid {\textbar} {{Diagramming}} and Charting Tool},
  urldate = {2024-06-09},
  howpublished = {https://mermaid.js.org/},
  file = {/home/joar/Zotero/storage/3DTDTU9I/mermaid.js.org.html}
}

@article{Microservices2024,
  title = {Microservices},
  year = {2024},
  month = oct,
  journal = {Wikipedia},
  urldate = {2024-10-14},
  abstract = {In software engineering, a microservice architecture is an architectural pattern that arranges an application as a collection of loosely coupled, fine-grained services, communicating through lightweight protocols. A microservice-based architecture enables teams to develop and deploy their services independently, reduce code interdependency and increase readability and modularity within a codebase. This is achieved by reducing several dependencies in the codebase, allowing developers to evolve their services with limited restrictions, and reducing additional complexity. Consequently, organizations can develop software with rapid growth and scalability, as well as implement off-the-shelf services more easily. These benefits come with the cost of needing to maintain a decoupled structure within the codebase, which means its initial implementation is more complex than that of a monolithic codebase. Interfaces need to be designed carefully and treated as APIs. A microservice is analogous to a bounded context in domain-driven design.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1250904068},
  file = {/home/joar/Zotero/storage/E95F2TMB/Microservices.html}
}

@inproceedings{moonDynamicLoadBalancing2005,
  title = {Dynamic {{Load Balancing Method Based}} on {{DNS}} for {{Distributed Web Systems}}},
  booktitle = {E-{{Commerce}} and {{Web Technologies}}},
  author = {Moon, Jong-Bae and Kim, Myung-Ho},
  year = {2005},
  pages = {238--247},
  publisher = {Springer, Berlin, Heidelberg},
  issn = {1611-3349},
  doi = {10.1007/11545163_24},
  urldate = {2024-12-13},
  abstract = {In most existing distributed Web systems, incoming requests are distributed to servers via Domain Name System (DNS). Although such systems are simple to implement, the address caching mechanism easily results in load unbalancing among servers. Moreover, modi.cation...},
  isbn = {978-3-540-31736-4},
  langid = {english},
  file = {/home/joar/Zotero/storage/XJEZ32MI/Moon and Kim - 2005 - Dynamic Load Balancing Method Based on DNS for Dis.pdf}
}

@incollection{moonDynamicLoadBalancing2005a,
  title = {Dynamic {{Load Balancing Method Based}} on {{DNS}} for {{Distributed Web Systems}}},
  booktitle = {E-{{Commerce}} and {{Web Technologies}}},
  author = {Moon, Jong-Bae and Kim, Myung-Ho},
  editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard and Bauknecht, Kurt and Pr{\"o}ll, Birgit and Werthner, Hannes},
  year = {2005},
  volume = {3590},
  pages = {238--247},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/11545163_24},
  urldate = {2024-12-13},
  isbn = {978-3-540-28467-3 978-3-540-31736-4}
}

@article{NewNewProduct,
  title = {The {{New New Product Development Game}}},
  journal = {Harvard Business Review},
  issn = {0017-8012},
  urldate = {2025-04-27},
  langid = {english},
  file = {/home/joar/Zotero/storage/D3KSMI37/the-new-new-product-development-game.html}
}

@misc{NodejsRunJavaScript,
  title = {Node.Js --- {{Run JavaScript Everywhere}}},
  urldate = {2025-03-29},
  abstract = {Node.js{\textregistered} is a JavaScript runtime built on Chrome's V8 JavaScript engine.},
  howpublished = {https://nodejs.org/en},
  langid = {british},
  file = {/home/joar/Zotero/storage/W44SCQFK/en.html}
}

@misc{Nodeyuma1232025,
  title = {Node-Yuma123},
  year = {2025},
  month = apr,
  journal = {npm},
  urldate = {2025-04-22},
  abstract = {Node.js bindings for the Yuma123 library. Latest version: 0.3.1, last published: 3 days ago. Start using node-yuma123 in your project by running `npm i node-yuma123`. There is 1 other project in the npm registry using node-yuma123.},
  howpublished = {https://www.npmjs.com/package/node-yuma123},
  langid = {english},
  file = {/home/joar/Zotero/storage/6VKUJBKC/node-yuma123.html}
}

@misc{Organisations,
  title = {Organisations-},
  urldate = {2025-03-28},
  howpublished = {https://www.peoplecert.org/Organisations},
  file = {/home/joar/Zotero/storage/BJSQYW99/Organisations.html}
}

@article{PairProgramming2024,
  title = {Pair Programming},
  year = {2024},
  month = nov,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {Pair programming is a software development technique in which two programmers work together at one workstation. One, the driver, writes code while the other, the observer or navigator, reviews each line of code as it is typed in. The two programmers switch roles frequently. While reviewing, the observer also considers the "strategic" direction of the work, coming up with ideas for improvements and likely future problems to address. This is intended to free the driver to focus all of their attention on the "tactical" aspects of completing the current task, using the observer as a safety net and guide.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1260042755},
  file = {/home/joar/Zotero/storage/IFT7EBLS/Pair_programming.html}
}

@article{ParkinsonLaw2024,
  title = {Parkinson's Law},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Parkinson's law can refer to either of two observations, published in 1955 by the naval historian C. Northcote Parkinson as an essay in The Economist: "work expands so as to fill the time available for its completion", the number of workers within public administration, bureaucracy or officialdom tends to grow, regardless of the amount of work to be done. This was attributed mainly to two factors: that officials want subordinates, not rivals, and that officials make work for each other. The first paragraph of the essay mentioned the first meaning above as a "commonplace observation", and the rest of the essay was devoted to the latter observation, terming it "Parkinson's Law".},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1221036066},
  file = {/home/joar/Zotero/storage/L7E4XP4E/Parkinson's_law.html}
}

@misc{PenpotDesignTool,
  title = {Penpot: {{The Design Tool}} for {{Design}} \& {{Code Collaboration}}},
  shorttitle = {Penpot},
  urldate = {2024-05-24},
  abstract = {Penpot is the open-source free design software that connects designers and developers with no handoff drama. Prototyping, UI design and code - all in one app.},
  howpublished = {https://penpot.app/},
  langid = {english},
  file = {/home/joar/Zotero/storage/N3BLSWN7/penpot.app.html}
}

@misc{PhasedProjectPlanning1968,
  title = {Phased {{Project Planning Guidelines}}},
  year = {1968},
  month = aug,
  urldate = {2025-04-27},
  abstract = {NHB 7121.2 is the initial publication of the guidelines for implementation of the Phased Project Planning (PPP) concept prescribed by NPD 7121,1A. These guidelines are applicable to the planning and approval activities which lead to the implementation of major new research and development projects as defined in NPD 7121.1A as well as to major modifications or extensions of approved projects. They should, therefore, be reflected in the Project Approval Documents which serve as the basic documentation for project definition, guidance and control throughout NASA. The purpose of PPP is to provide, through defined phases, an adequate basis for management decisions on the extent to which project activities can be properly undertaken and commitments made. However, these guidelines do not prescribe detailed format and content of plans and other documents and reports used to apply the PPP concept. Similarly, the work content of phases and the information requirements described herein are not checklists. They are included to assist in understanding the intent of the PPP concept and should not be viewed as rigid or inflexible. PPP, as a concept for orderly planning and definition of new major R\&D undertakings, must be adapted to the peculiarities of each individual case. However, the flexibility permitted for adaptation should not be considered as a license for major variation which would compromise the objectives that underlie the concept. Cognizant NASA officials are expected to pursue their project planning and definition activities in reasonable conformance with these guidelines and to request only those exceptions or deviations which are clearly necessary and justified. These guidelines will be modified as determined necessary on the basis of experience. Comments or suggestions for changes should be directed to the Office of Organization and Management.},
  keywords = {Fluid Mechanics And Thermodynamics},
  annotation = {NTRS Report/Patent Number: NHB-7121.2\\
NTRS Document ID: 19720064044\\
NTRS Research Center: Headquarters (HQ)},
  file = {/home/joar/Zotero/storage/XPRAKJVV/19720064044.html}
}

@misc{PRISMAStatement,
  title = {{{PRISMA}} Statement},
  journal = {PRISMA statement},
  urldate = {2025-03-28},
  howpublished = {https://www.prisma-statement.org},
  langid = {american},
  file = {/home/joar/Zotero/storage/GTJ9UN7Y/www.prisma-statement.org.html}
}

@misc{ProductionGradeContainerOrchestration,
  title = {Production-{{Grade Container Orchestration}}},
  journal = {Kubernetes},
  urldate = {2024-12-11},
  abstract = {Kubernetes, also known as K8s, is an open source system for automating deployment, scaling, and management of containerized applications. It groups containers that make up an application into logical units for easy management and discovery. Kubernetes builds upon 15 years of experience of running production workloads at Google, combined with best-of-breed ideas and practices from the community. Planet Scale Designed on the same principles that allow Google to run billions of containers a week, Kubernetes can scale without increasing your operations team.},
  howpublished = {https://kubernetes.io/},
  langid = {english},
  file = {/home/joar/Zotero/storage/8EJ26PEY/kubernetes.io.html}
}

@misc{PullRequests,
  title = {About Pull Requests},
  journal = {GitHub Docs},
  urldate = {2024-06-02},
  abstract = {Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch.},
  howpublished = {https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests},
  langid = {english},
  file = {/home/joar/Zotero/storage/JHLXH9EK/about-pull-requests.html}
}

@misc{React,
  title = {React},
  urldate = {2024-06-02},
  abstract = {React is the library for web and native user interfaces. Build user interfaces out of individual pieces called components written in JavaScript. React is designed to let you seamlessly combine components written by independent people, teams, and organizations.},
  howpublished = {https://react.dev/},
  langid = {english},
  file = {/home/joar/Zotero/storage/8QS8WBA9/react.dev.html}
}

@techreport{rescorlaTransportLayerSecurity2008,
  type = {Request for {{Comments}}},
  title = {The {{Transport Layer Security}} ({{TLS}}) {{Protocol Version}} 1.2},
  author = {Rescorla, Eric and Dierks, Tim},
  year = {2008},
  month = aug,
  number = {RFC 5246},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC5246},
  urldate = {2025-05-13},
  abstract = {This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol. The TLS protocol provides communications security over the Internet. The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/8MYB3DAW/Rescorla and Dierks - 2008 - The Transport Layer Security (TLS) Protocol Versio.pdf}
}

@techreport{schonwalderSimpleNetworkManagement2006,
  type = {Request for {{Comments}}},
  title = {Simple {{Network Management Protocol}} ({{SNMP}}) over {{IEEE}} 802 {{Networks}}},
  author = {Sch{\"o}nw{\"a}lder, J{\"u}rgen and Jeffree, Tony},
  year = {2006},
  month = nov,
  number = {RFC 4789},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC4789},
  urldate = {2025-05-14},
  abstract = {This document specifies how Simple Network Management Protocol (SNMP) messages can be transmitted directly over IEEE 802 networks. This document obsoletes RFC 1089. [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/EXDBIKJZ/Schönwälder and Jeffree - 2006 - Simple Network Management Protocol (SNMP) over IEE.pdf}
}

@article{Scrum2023,
  title = {{Scrum}},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {Innen prosjektledelse er scrum et rammeverk for {\aa} utvikle, levere og opprettholde produkter i et komplekst milj{\o}. Scrum har sin bakgrunn fra programvareutvikling, men har ogs{\aa} blitt brukt i andre felt inkludert forskning, salg, markedsf{\o}ring og h{\o}yteknologi. Metodikken er designet for team med 3 til 10 medlemmer, og bryter ned arbeidet i m{\aa}l (sprintk{\o}er) som skal fullf{\o}res innen tidsbokser kalt sprinter. Sprintene har som regel varighet ikke lengre enn en m{\aa}ned og oftest to uker. Scrumteamet vurderer fremgangen i daglige m{\o}ter p{\aa} 15 minutter eller mindre kalt daglige scrums (en form for st{\aa}m{\o}te). P{\aa} slutten av sprinten har teamet har ytterligere to m{\o}ter, henholdsvis sprintgjennomgang hvor man viser utf{\o}rt arbeid for interessenten for {\aa} f{\aa} tilbakemeldinger, og sprintevaluering hvor teamet kan reflektere og forbedre seg.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {norwegianbokmal},
  annotation = {Page Version ID: 24092351},
  file = {/home/joar/Zotero/storage/BHYMSMZN/Scrum.html}
}

@misc{ScrumAllianceFind,
  title = {Scrum {{Alliance}} - {{Find Courses}} for {{Scrum}} and {{Agile Certifications}}},
  urldate = {2025-03-28},
  abstract = {Become agile-certified with Scrum Alliance. Upskill, deliver results, and join a diverse community of 1.5 million professionals worldwide.},
  howpublished = {https://www.scrumalliance.org},
  langid = {english},
  file = {/home/joar/Zotero/storage/6FD7YJBM/www.scrumalliance.org.html}
}

@article{ScrumRugbyUnion2025,
  title = {Scrum (Rugby Union)},
  year = {2025},
  month = apr,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {In rugby union, a scrum is a means of restarting play after a minor infringement. It involves up to eight players from each team, known as the pack or forward pack, binding together in three rows and interlocking with the three opposing teams front row. At this point the ball is fed into the gap between the two forward packs and they both compete for the ball to win possession. Teams can be penalised for intentionally causing the scrum to collapse, and for not putting the ball into the scrum correctly. A scrum is most commonly awarded when the ball is knocked forward, or passed forward, or when a ball becomes trapped in a ruck or maul. Because of the physical nature of scrums, injuries can occur, especially in the front row.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1286755832},
  file = {/home/joar/Zotero/storage/DS3S6KND/Scrum_(rugby_union).html}
}

@misc{scrumwiseScrumToolsScrum,
  title = {Scrum {{Tools}} / {{Scrum Software}}},
  author = {Scrumwise},
  journal = {Scrumwise},
  urldate = {2024-06-02},
  abstract = {The easiest Scrum tool you'll find. Scrumwise lets you focus on your Scrum project, instead of getting lost in a complex tool.},
  howpublished = {https://www.scrumwise.com},
  langid = {english},
  file = {/home/joar/Zotero/storage/JLXH7EMX/www.scrumwise.com.html}
}

@misc{SecuringNodeREDNodeRED,
  title = {Securing {{Node-RED}} : {{Node-RED}}},
  urldate = {2025-05-14},
  howpublished = {https://nodered.org/docs/user-guide/runtime/securing-node-red}
}

@techreport{seoSecurityArchitectureInternet2005,
  type = {Request for {{Comments}}},
  title = {Security {{Architecture}} for the {{Internet Protocol}}},
  author = {Seo, Karen and Kent, Stephen},
  year = {2005},
  month = dec,
  number = {RFC 4301},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC4301},
  urldate = {2025-05-13},
  abstract = {This document describes an updated version of the "Security Architecture for IP", which is designed to provide security services for traffic at the IP layer. This document obsoletes RFC 2401 (November 1998). [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/GJ5WR54U/Seo and Kent - 2005 - Security Architecture for the Internet Protocol.pdf}
}

@techreport{seoSecurityArchitectureInternet2005a,
  type = {Request for {{Comments}}},
  title = {Security {{Architecture}} for the {{Internet Protocol}}},
  author = {Seo, Karen and Kent, Stephen},
  year = {2005},
  month = dec,
  number = {RFC 4301},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC4301},
  urldate = {2025-05-13},
  abstract = {This document describes an updated version of the "Security Architecture for IP", which is designed to provide security services for traffic at the IP layer. This document obsoletes RFC 2401 (November 1998). [STANDARDS-TRACK]},
  file = {/home/joar/Zotero/storage/NNNRLVAK/Seo and Kent - 2005 - Security Architecture for the Internet Protocol.pdf}
}

@misc{ShowitDocsAccesscontrol,
  title = {Show-It/Docs/Access-Control.Md at Main {$\cdot$} {{Slenderman00}}/Show-It},
  urldate = {2024-06-09},
  howpublished = {https://github.com/Slenderman00/show-it/blob/main/docs/access-control.md},
  file = {/home/joar/Zotero/storage/3W2ZJN3Z/access-control.html}
}

@misc{ShowitDocsSecurity,
  title = {Show-It/Docs/{{Security Practices}} and {{Standards}} for the {{Development Process}} at Patch-1 {$\cdot$} Yg400/Show-It},
  urldate = {2024-06-02},
  howpublished = {https://github.com/yg400/show-it/blob/patch-1/docs/Security\%20Practices\%20and\%20Standards\%20for\%20the\%20Development\%20Process},
  file = {/home/joar/Zotero/storage/VQVTPJSW/Security Practices and Standards for the Development Process.html}
}

@misc{ShowitDocsVisualdesign,
  title = {Show-It/Docs/Visual-Design.Md at Main {$\cdot$} {{Slenderman00}}/Show-It},
  urldate = {2024-06-09},
  howpublished = {https://github.com/Slenderman00/show-it/blob/main/docs/visual-design.md},
  file = {/home/joar/Zotero/storage/5TG7QWTF/visual-design.html}
}

@article{Storyboard2024,
  title = {Storyboard},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-24},
  abstract = {A storyboard is a graphic organizer that consists of illustrations or images displayed in sequence for the purpose of pre-visualizing a motion picture, animation, motion graphic or interactive media sequence. The storyboarding process, in the form it is known today, was developed at Walt Disney Productions during the early 1930s, after several years of similar processes being in use at Walt Disney and other animation studios.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1219212150},
  file = {/home/joar/Zotero/storage/UKZRF3CV/Storyboard.html}
}

@misc{TAPROpenHardware,
  title = {The {{TAPR Open Hardware License}} -- {{TAPR}}},
  urldate = {2025-05-13},
  howpublished = {https://tapr.org/the-tapr-open-hardware-license/},
  file = {/home/joar/Zotero/storage/H58FXY2B/the-tapr-open-hardware-license.html}
}

@article{Timeboxing2024,
  title = {Timeboxing},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-06-02},
  abstract = {In agile principles, timeboxing allocates a maximum unit of time to an activity, called a timebox, within which a planned activity takes place. It is used by agile principles-based  project management approaches and for personal time management.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1216839149},
  file = {/home/joar/Zotero/storage/DC2RTGGA/Timeboxing.html}
}

@misc{TPS54260DataSheet,
  title = {{{TPS54260}} Data Sheet, Product Information and Support {\textbar} {{TI}}.Com},
  urldate = {2025-01-12},
  howpublished = {https://www.ti.com/product/TPS54260},
  file = {/home/joar/Zotero/storage/N9FJ3VHF/TPS54260.html}
}

@misc{vassilevVlvassilevYuma1232025,
  title = {Vlvassilev/Yuma123},
  author = {Vassilev, Vladimir},
  year = {2025},
  month = mar,
  urldate = {2025-04-27},
  abstract = {The yuma123 repository}
}

@article{verwijsTheoryScrumTeam2023,
  title = {A {{Theory}} of {{Scrum Team Effectiveness}}},
  author = {Verwijs, Christiaan and Russo, Daniel},
  year = {2023},
  month = jul,
  journal = {ACM Transactions on Software Engineering and Methodology},
  volume = {32},
  number = {3},
  pages = {1--51},
  issn = {1049-331X, 1557-7392},
  doi = {10.1145/3571849},
  urldate = {2025-04-27},
  abstract = {Scrum teams are at the heart of the Scrum framework. Nevertheless, an integrated and systemic theory that can explain what makes some Scrum teams more effective than others is still missing. To address this gap, we performed a 7-year-long mixed-methods investigation composed of two main phases. First, we induced a theoretical model from 13 exploratory field studies. Our model proposes that the effectiveness of Scrum teams depends on five high-level factors (responsiveness, stakeholder concern, continuous improvement, team autonomy, and management support) and 13 lower-level factors. In the second phase of our study, we validated our model with a covariance-based structural equation modeling analysis using data from about 5,000 developers and 2,000 Scrum teams that we gathered with a custom-built survey. Results suggest a very good fit of the empirical data in our theoretical model (               CFI               = 0.959,               RMSEA               = 0.038,               SRMR               = 0.035). Accordingly, this research allowed us to (1) propose and validate a generalizable theory for effective Scrum teams and (2) formulate clear recommendations for how organizations can better support Scrum teams.},
  langid = {english},
  file = {/home/joar/Zotero/storage/NS8JZJK6/Verwijs and Russo - 2023 - A Theory of Scrum Team Effectiveness.pdf}
}

@article{verwijsTheoryScrumTeam2023a,
  title = {A {{Theory}} of {{Scrum Team Effectiveness}}},
  author = {Verwijs, Christiaan and Russo, Daniel},
  year = {2023},
  month = apr,
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {32},
  number = {3},
  pages = {74:1--74:51},
  issn = {1049-331X},
  doi = {10.1145/3571849},
  urldate = {2025-04-27},
  abstract = {Scrum teams are at the heart of the Scrum framework. Nevertheless, an integrated and systemic theory that can explain what makes some Scrum teams more effective than others is still missing. To address this gap, we performed a 7-year-long mixed-methods investigation composed of two main phases. First, we induced a theoretical model from 13 exploratory field studies. Our model proposes that the effectiveness of Scrum teams depends on five high-level factors (responsiveness, stakeholder concern, continuous improvement, team autonomy, and management support) and 13 lower-level factors. In the second phase of our study, we validated our model with a covariance-based structural equation modeling analysis using data from about 5,000 developers and 2,000 Scrum teams that we gathered with a custom-built survey. Results suggest a very good fit of the empirical data in our theoretical model (CFI = 0.959, RMSEA = 0.038, SRMR = 0.035). Accordingly, this research allowed us to (1) propose and validate a generalizable theory for effective Scrum teams and (2) formulate clear recommendations for how organizations can better support Scrum teams.},
  file = {/home/joar/Zotero/storage/44699LVQ/Verwijs and Russo - 2023 - A Theory of Scrum Team Effectiveness.pdf}
}

@misc{Vite,
  title = {Vite},
  journal = {vitejs},
  urldate = {2024-06-02},
  abstract = {Next Generation Frontend Tooling},
  howpublished = {https://vitejs.dev},
  langid = {american},
  file = {/home/joar/Zotero/storage/MTHGGEG9/vitejs.dev.html}
}

@article{WaterfallModel2025,
  title = {Waterfall Model},
  year = {2025},
  month = feb,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {The waterfall model is a breakdown of developmental activities into linear sequential phases, meaning that each phase is passed down onto each other, where each phase depends on the deliverables of the previous one and corresponds to a specialization of tasks. This approach is typical for certain areas of engineering design. In software development, it tends to be among the less iterative and flexible approaches, as progress flows in largely one direction (downwards like a waterfall) through the phases of conception, initiation, analysis, design, construction, testing, deployment, and maintenance. The waterfall model is the earliest Systems Development Life Cycle (SDLC) approach used in software development. When it was first adopted, there were no recognized alternatives for knowledge-based creative work.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1275499744},
  file = {/home/joar/Zotero/storage/MV9DNTGP/Waterfall_model.html}
}

@article{WaterfallModel2025a,
  title = {Waterfall Model},
  year = {2025},
  month = feb,
  journal = {Wikipedia},
  urldate = {2025-04-27},
  abstract = {The waterfall model is a breakdown of developmental activities into linear sequential phases, meaning that each phase is passed down onto each other, where each phase depends on the deliverables of the previous one and corresponds to a specialization of tasks. This approach is typical for certain areas of engineering design. In software development, it tends to be among the less iterative and flexible approaches, as progress flows in largely one direction (downwards like a waterfall) through the phases of conception, initiation, analysis, design, construction, testing, deployment, and maintenance. The waterfall model is the earliest Systems Development Life Cycle (SDLC) approach used in software development. When it was first adopted, there were no recognized alternatives for knowledge-based creative work.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1275499744},
  file = {/home/joar/Zotero/storage/IMLBFKV8/Waterfall_model.html}
}

@misc{WelcomeRIPERIPE2024,
  title = {Welcome to {{RIPE}} and the {{RIPE NCC}}},
  year = {2024},
  month = nov,
  journal = {RIPE Network Coordination Center},
  urldate = {2024-12-11},
  abstract = {The RIPE NCC is one of five Regional Internet Registries (RIRs) providing Internet resource allocation and registration, and coordination activities.},
  howpublished = {https://www.ripe.net/},
  langid = {english},
  file = {/home/joar/Zotero/storage/GWUJ3CDM/www.ripe.net.html}
}

@misc{WhatHowMight,
  title = {What Is {{How Might We}} ({{HMW}})? --- Updated 2024},
  shorttitle = {What Is {{How Might We}} ({{HMW}})?},
  journal = {The Interaction Design Foundation},
  urldate = {2024-05-24},
  abstract = {How Might We is a design thinking method where designers create questions that open up ideation sessions to generate a broad number of solutions.},
  howpublished = {https://www.interaction-design.org/literature/topics/how-might-we},
  langid = {english},
  file = {/home/joar/Zotero/storage/X88DF8UK/how-might-we.html}
}

@misc{XMLPathLanguage,
  title = {{{XML Path Language}} ({{XPath}}) 3.1},
  urldate = {2025-05-07},
  howpublished = {https://www.w3.org/TR/xpath-31/},
  file = {/home/joar/Zotero/storage/ZMI7WFN9/xpath-31.html}
}

@misc{XPathMDN2024,
  title = {{{XPath}} {\textbar} {{MDN}}},
  year = {2024},
  month = sep,
  urldate = {2025-01-20},
  abstract = {XPath stands for XML Path Language. It uses a non-XML syntax to provide a flexible way of addressing (pointing to) different parts of an XML document. It can also be used to test addressed nodes within a document to determine whether they match a pattern or not.},
  howpublished = {https://developer.mozilla.org/en-US/docs/Web/XPath},
  langid = {american},
  file = {/home/joar/Zotero/storage/D7SDBUQV/XPath.html}
}

@inproceedings{xuLoadBalancingDNSbased2004,
  title = {Load Balancing of {{DNS-based}} Distributed {{Web}} Server Systems with Page Caching},
  booktitle = {Proceedings. {{Tenth International Conference}} on {{Parallel}} and {{Distributed Systems}}, 2004. {{ICPADS}} 2004.},
  author = {Xu, Zhong and Huang, Rong and Bhuyan, L.N.},
  year = {2004},
  month = jul,
  pages = {587--594},
  issn = {1521-9097},
  doi = {10.1109/ICPADS.2004.1316141},
  urldate = {2024-12-13},
  abstract = {The explosion of WWW traffic has triggered great interest in distributed Web server systems. Among various distributed Web server architectures, the DNS-based distributed system is a promising solution in terms of performance, scalability and availability. DNS (domain name server) name caching has significant effects on the load balance of distributed Web server systems, due to the traffic skewness it causes. Also, there is page caching along whole paths between clients and Web servers, and page caching schemes could affect the system load balancing a lot. In this paper, we examine various caching issues, including the load balancing algorithms of the DNS, the locations of caches, and the page caching policies, for the DNS-based Web server system. We use stochastic processes to model the Web traffic, and compare the load balance performance of these algorithms and policies based on simulation results. We found that, the DNS load balancing algorithm, which takes into account both client domain information and server load information, could yield best load balance performance among various algorithms, and a server-side cache with the policy which only caches popular Web pages could significantly improve both the cache hit ratio and the load balance.},
  keywords = {Availability,Explosions,Load management,Scalability,Service oriented architecture,Stochastic processes,Traffic control,Web pages,Web server,World Wide Web},
  file = {/home/joar/Zotero/storage/8ETZDX8A/Xu et al. - 2004 - Load balancing of DNS-based distributed Web server.pdf;/home/joar/Zotero/storage/PXKT5HNQ/1316141.html}
}

@inproceedings{xuLoadBalancingDNSbased2004a,
  title = {Load Balancing of {{DNS-based}} Distributed {{Web}} Server Systems with Page Caching},
  booktitle = {Proceedings. {{Tenth International Conference}} on {{Parallel}} and {{Distributed Systems}}, 2004. {{ICPADS}} 2004.},
  author = {Xu, Zhong and Huang, Rong and Bhuyan, L.N.},
  year = {2004},
  month = jul,
  pages = {587--594},
  issn = {1521-9097},
  doi = {10.1109/ICPADS.2004.1316141},
  urldate = {2024-12-13},
  abstract = {The explosion of WWW traffic has triggered great interest in distributed Web server systems. Among various distributed Web server architectures, the DNS-based distributed system is a promising solution in terms of performance, scalability and availability. DNS (domain name server) name caching has significant effects on the load balance of distributed Web server systems, due to the traffic skewness it causes. Also, there is page caching along whole paths between clients and Web servers, and page caching schemes could affect the system load balancing a lot. In this paper, we examine various caching issues, including the load balancing algorithms of the DNS, the locations of caches, and the page caching policies, for the DNS-based Web server system. We use stochastic processes to model the Web traffic, and compare the load balance performance of these algorithms and policies based on simulation results. We found that, the DNS load balancing algorithm, which takes into account both client domain information and server load information, could yield best load balance performance among various algorithms, and a server-side cache with the policy which only caches popular Web pages could significantly improve both the cache hit ratio and the load balance.},
  keywords = {Availability,Explosions,Load management,Scalability,Service oriented architecture,Stochastic processes,Traffic control,Web pages,Web server,World Wide Web},
  file = {/home/joar/Zotero/storage/D3W52XZ7/Xu et al. - 2004 - Load balancing of DNS-based distributed Web server.pdf;/home/joar/Zotero/storage/FEMYRGU5/1316141.html}
}

@misc{YumaYangcliManual,
  title = {Yuma Yangcli {{Manual}} - {{Yuma123 Wiki}}},
  urldate = {2025-05-13},
  howpublished = {https://yuma123.org/wiki/index.php/Yuma\_yangcli\_Manual},
  file = {/home/joar/Zotero/storage/9CEKGAEK/Yuma_yangcli_Manual.html}
}

@techreport{yuSupernettingAddressAssignment1992,
  type = {Request for {{Comments}}},
  title = {Supernetting: An {{Address Assignment}} and {{Aggregation Strategy}}},
  shorttitle = {Supernetting},
  author = {Yu, Jessica and Li, Tony and Varadhan, Kannan and Fuller, Vince},
  year = {1992},
  month = jun,
  number = {RFC 1338},
  institution = {Internet Engineering Task Force},
  doi = {10.17487/RFC1338},
  urldate = {2025-10-16},
  abstract = {This memo discusses strategies for address assignment of the existing IP address space with a view to conserve the address space and stem the explosive growth of routing tables in default-route-free routers run by transit routing domain providers. This memo provides information for the Internet community. It does not specify an Internet standard.},
  file = {/home/joar/Zotero/storage/KSYL7Q2J/Yu et al. - 1992 - Supernetting an Address Assignment and Aggregatio.pdf}
}

@misc{zotero-149,
  urldate = {2025-03-28},
  howpublished = {https://www.peoplecert.org/login?ReturnUrl=/my-membership},
  file = {/home/joar/Zotero/storage/LFX8XZRC/login.html}
}
